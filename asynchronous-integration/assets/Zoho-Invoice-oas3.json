{
  "openapi": "3.0.0",
  "info": {
    "title": "Zoho Invoice API",
    "description": "The Zoho Invoice API allows you to perform all the operations that you do with our web client.\n\nZoho Invoice API is built using REST principles which ensures predictable URLs that makes writing applications easy. This API follows HTTP rules, enabling a wide range of HTTP clients which can be used to interact with the API.\n\nAn invoice is a statement of items sold by a seller. It includes all the details of sale including units of goods, price of goods sold, shipping details, etc.",
    "version": "1.0.0",
    "contact": {
      "name": "Zoho Invoice",
      "email": "support@zohoinvoice.com",
      "url": "https://www.zoho.com/invoice/api/v3"
    },
    "license": {
      "name": "GPL 3.0",
      "url": "https://www.gnu.org/licenses/gpl-3.0.html"
    },
    "termsOfService": "https://www.zoho.com/developer/terms.html"
  },
  "servers": [
    {
      "url": "https://invoice.zoho.com",
      "description": "United States"
    },
    {
      "url": "https://invoice.zoho.eu",
      "description": "Europe"
    },
    {
      "url": "https://accounts.zoho.in",
      "description": "India"
    },
    {
      "url": "https://accounts.zoho.com.au",
      "description": "Australia"
    },
    {
      "url": "https://accounts.zoho.jp",
      "description": "Japan"
    }
  ],
  "tags": [
    {
      "name": "Invoice",
      "description": "Invoice management"
    },
    {
      "name": "Invoice Payment",
      "description": "Invoice Payment management"
    }
  ],
  "paths": {
    "/api/v3/invoices": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get All Invoices",
        "description": "Selecting a particular invoice fromt the list of invoices",
        "parameters": [
          {
            "name": "X-com-zoho-invoice-organizationid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{organization_id}}",
            "description": "Zoho Organization ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "invoices": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/invoice"
                      }
                    },
                    "page_context": {
                      "$ref": "#/components/schemas/page_context"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "GetInvoices",
        "security": [
          {
            "OAuth2": [
              "ZohoInvoice.invoices.READ"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Create Invoice",
        "description": "Creating invoice to a particular customer",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "JSONString": {
                    "type": "string",
                    "example": "{\n  \"payment_terms\": {payment term},\n  \"payment_terms_label\": \"{Label text}\",\n  \"payment_options\": {\n    \"payment_gateways\": []\n  },\n  \"customer_id\": \"{Customer ID}\",\n  \"contact_persons\": [\"{Contact Person ID}\"],\n  \"date\": \"{Date:YYYY-MM-DD}\",\n  \"due_date\": \"Date:YYYY-MM-DD}\",\n  \"notes\": \"{Note}\",\n  \"terms\": \"{Term}\",\n  \"is_inclusive_tax\": {true/false},\n  \"line_items\": [{\n    \"item_id\": \"{Item ID}\",\n    \"quantity\": \"{quantity}\",\n    \"discount\": \"{Discount}\",\n    \"tax_id\": \"{Tax ID}\",\n  }],\n  \"allow_partial_payments\": {true/false},\n  \"custom_fields\": [],\n  \"is_discount_before_tax\": {true/false},\n  \"discount_type\": \"{discount Type}\",\n  \"shipping_charge\": \"{Charges}\",\n  \"adjustment\": \"{Adjustments}\",\n  \"adjustment_description\": \"{Description}\",\n  \"pricebook_id\": \"{Price Book ID}\",\n  \"template_id\": \"{Template ID}\",\n  \"documents\": [],\n  \"mail_attachments\": []\n}"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json",
            "description": "Request Body Type"
          },
          {
            "name": "X-com-zoho-invoice-organizationid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{organization_id}}",
            "description": "Zoho Organization ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "invoice": {
                      "$ref": "#/components/schemas/invoice"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "CreateInvoice",
        "security": [
          {
            "OAuth2": [
              "ZohoInvoice.invoices.CREATE"
            ]
          }
        ]
      }
    },
    "/api/v3/invoices/{Invoice_id}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get Invoice",
        "description": "Selecting a particular invoice from the list of invoices",
        "parameters": [
          {
            "name": "X-com-zoho-invoice-organizationid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{organization_id}}",
            "description": "Zoho Organization ID"
          },
          {
            "name": "Invoice_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "identifier of the invoice to be selected"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "invoice": {
                      "$ref": "#/components/schemas/invoice"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "GetInvoiceById",
        "security": [
          {
            "OAuth2": [
              "ZohoInvoice.invoices.READ"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Update Invoice",
        "description": "Update an existing invoice. To delete a line item just remove it from the line_items list.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "JSONString": {
                    "type": "string",
                    "example": "{\n  \"payment_terms\": {payment term},\n  \"payment_terms_label\": \"{Label text}\",\n  \"payment_options\": {\n    \"payment_gateways\": []\n  },\n  \"customer_id\": \"{Customer ID}\",\n  \"contact_persons\": [\"{Contact Person ID}\"],\n  \"date\": \"{Date:YYYY-MM-DD}\",\n  \"due_date\": \"Date:YYYY-MM-DD}\",\n  \"notes\": \"{Note}\",\n  \"terms\": \"{Term}\",\n  \"is_inclusive_tax\": {true/false},\n  \"line_items\": [{\n    \"item_id\": \"{Item ID}\",\n    \"quantity\": \"{quantity}\",\n    \"discount\": \"{Discount}\",\n    \"tax_id\": \"{Tax ID}\",\n  }],\n  \"allow_partial_payments\": {true/false},\n  \"custom_fields\": [],\n  \"is_discount_before_tax\": {true/false},\n  \"discount_type\": \"{discount Type}\",\n  \"shipping_charge\": \"{Charges}\",\n  \"adjustment\": \"{Adjustments}\",\n  \"adjustment_description\": \"{Description}\",\n  \"pricebook_id\": \"{Price Book ID}\",\n  \"template_id\": \"{Template ID}\",\n  \"documents\": [],\n  \"mail_attachments\": []\n}"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json",
            "description": "Request Body Type"
          },
          {
            "name": "X-com-zoho-invoice-organizationid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{organization_id}}",
            "description": "Zoho Organization ID"
          },
          {
            "name": "Invoice_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "identifier of the invoice to be updated"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "invoice": {
                      "$ref": "#/components/schemas/invoice"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "UpdateInvoice",
        "security": [
          {
            "OAuth2": [
              "ZohoInvoice.invoices.UPDATE"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Invoice"
        ],
        "summary": "Delete Invoice",
        "description": "Deleting invoice using a particular invoiceID",
        "parameters": [
          {
            "name": "X-com-zoho-invoice-organizationid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{organization_id}}",
            "description": "Zoho Organization ID"
          },
          {
            "name": "Invoice_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "identifier of the invoice to be deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "DeleteInvoice",
        "security": [
          {
            "OAuth2": [
              "ZohoInvoice.invoices.DELETE"
            ]
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "Invoice_id",
          "in": "path",
          "description": "identifier of the invoice to be selected",
          "required": true
        }
      ]
    },
    "/api/v3/invoices/{Invoice_id}/payments": {
      "get": {
        "tags": [
          "Invoice Payment"
        ],
        "summary": "List Invoice Payments",
        "parameters": [
          {
            "name": "X-com-zoho-invoice-organizationid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{organization_id}}",
            "description": "Zoho Organization ID"
          },
          {
            "name": "Invoice_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "identifier of the invoice to select associated payments from"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        },
        "operationId": "ListPayments",
        "description": "Get the list of payments made for an invoice.",
        "security": [
          {
            "OAuth2": [
              "ZohoInvoice.invoices.READ"
            ]
          }
        ]
      }
    },
    "/api/v3/invoices/{Invoice_id}/status/sent": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Mark as Sent",
        "description": "Marking an invoice as sent",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-com-zoho-invoice-organizationid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{organization_id}}",
            "description": "Zoho Organization ID"
          },
          {
            "name": "Invoice_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "identifier of the invoice to be maked as sent"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        },
        "operationId": "MarkAsSent",
        "security": [
          {
            "OAuth2": [
              "ZohoInvoice.invoices.UPDATE"
            ]
          }
        ]
      }
    },
    "/api/v3/invoices/{Invoice_id}/email": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Email Invoice",
        "description": "After viewing the email, the email is sent to the customer",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "JSONString": {
                    "type": "string",
                    "example": "{\n  \"from_address_id\": \"{addressID}\",\n  \"to_mail_ids\": [\"{mailID}\"],\n  \"subject\": \"{Subject Message}\",\n  \"body\": \"<div style=\\\"background: #fbfbfb;\\\"> <div> <div style=\\\"padding: 2% 3%;max-width: 150px;max-height:50px;\\\"></div></div><div style=\\\"padding:3%;text-align:center;background: #4190f2;\\\"> <div style=\\\"color:#fff;font-size:20px;font-weight:500;\\\">Invoice #INV-000001</div></div><div style=\\\"max-width:560px;margin:auto;padding: 0 3%;\\\"> <div style=\\\"padding: 30px 0; color: #555;line-height: 1.7;\\\">Dear Zoho, <br><br>Thank you for your business. Your invoice can be viewed, printed and downloaded as PDF from the link below. You can also choose to pay it online. <br></div><div style=\\\"padding: 3%; background: #fefff1; border: 1px solid #e8deb5; color: #333;\\\"> <div style=\\\"padding: 0 3% 3%; border-bottom: 1px solid #e8deb5; text-align: center;\\\"> <h4 style=\\\"margin-bottom: 0;\\\">INVOICE AMOUNT</h4> <h2 style=\\\"color: #D61916; margin-top: 10px;\\\">₹102.00</h2> </div><div style=\\\"margin:auto; max-width:350px; padding: 3%;\\\"> <p><span style=\\\"width: 40%; padding-left: 10%; float:left; \\\">Invoice No</span><span style=\\\"width: 40%; padding-left: 10%; display: inline-block;\\\"><b>INV-000001</b></span></p><p><span style=\\\"width: 40%; padding-left: 10%; float:left; \\\">Invoice Date</span><span style=\\\"width: 40%; padding-left: 10%;\\\"><b>18/05/2017</b></span></p><p><span style=\\\"width: 40%; padding-left: 10%; float:left; \\\">Due Date</span><span style=\\\"width: 40%; padding-left: 10%;\\\"><b>24/05/2017</b></span></p></div><div style=\\\"text-align: center;margin: 25px 0;\\\"> <a href=\\\"https://invoice.zoho.com/portal/trialtestrun1/secure?CInvoiceID=2-7ae22f3c19b5b71ff4831a2a987c119fd51cbc04009b9ab6e2cbcac0e7b5ac9647743c60063ced5819061713c9c76e41d50951419f2df83f \\\" style=\\\"text-decoration: none;\\\"> <span style=\\\"background-color:#4dcf59; border: 1px solid #49bd54; cursor: pointer; text-align: center; min-width: 140px; color: #fff; display: inline-block; text-decoration: none; padding: 10px 20px\\\">VIEW INVOICE</span></a> </div></div><br><div style=\\\"padding: 3% 0;line-height: 1.6;\\\"> Regards, <div style=\\\"color: #8c8c8c; font-weight: 400\\\">Rohith K</div><div style=\\\"color: #b1b1b1\\\">TrialTestefgh</div></div></div></div><br><br>\",\n  \"cc_mail_ids\": [\"{mailID}\"],\n  \"bcc_mail_ids\": [\"{mailID}\"],\n  \"send_from_org_email_id\": {true/false}\n}"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data",
            "description": "Request Body Type"
          },
          {
            "name": "X-com-zoho-invoice-organizationid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{organization_id}}",
            "description": "Zoho Organization ID"
          },
          {
            "name": "Invoice_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "identifier of the invoice to be emailed"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        },
        "operationId": "Email",
        "security": [
          {
            "OAuth2": [
              "ZohoInvoice.invoices.UPDATE"
            ]
          }
        ]
      }
    },
    "/api/v3/invoices/{Invoice_id}/writeoff": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Write off invoice",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "JSONString": {
                    "type": "string",
                    "example": "{\n  \"invoice_payments\": [{\n    \"payment_id\": \"{paymentID}\",\n    \"amount_applied\": \"{amount}\"\n  }],\n  \"apply_creditnotes\": [{\n    \"creditnote_id\": \"{creditNoteID}\",\n    \"amount_applied\": \"{amounty}\"\n  }]\n}"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data",
            "description": "Request Body Type"
          },
          {
            "name": "X-com-zoho-invoice-organizationid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{organization_id}}",
            "description": "Zoho Organization ID"
          },
          {
            "name": "Invoice_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "identifier of the invoice to be wrote off"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        },
        "operationId": "WriteOff",
        "description": "Write off the invoice balance amount of an invoice.",
        "security": [
          {
            "OAuth2": [
              "ZohoInvoice.invoices.UPDATE"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "invoice": {
        "type": "object",
        "properties": {
          "invoice_id": {
            "type": "string"
          },
          "ach_payment_initiated": {
            "type": "boolean"
          },
          "zcrm_potential_id": {
            "type": "string"
          },
          "zcrm_potential_name": {
            "type": "string"
          },
          "customer_name": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "company_name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "color_code": {
            "type": "string"
          },
          "current_sub_status_id": {
            "type": "string"
          },
          "current_sub_status": {
            "type": "string"
          },
          "invoice_number": {
            "type": "string"
          },
          "reference_number": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "due_date": {
            "type": "string"
          },
          "due_days": {
            "type": "string"
          },
          "currency_id": {
            "type": "string"
          },
          "schedule_time": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "currency_code": {
            "type": "string"
          },
          "currency_symbol": {
            "type": "string"
          },
          "template_type": {
            "type": "string"
          },
          "no_of_copies": {
            "type": "integer"
          },
          "show_no_of_copies": {
            "type": "boolean"
          },
          "is_viewed_by_client": {
            "type": "boolean"
          },
          "has_attachment": {
            "type": "boolean"
          },
          "client_viewed_time": {
            "type": "string"
          },
          "invoice_url": {
            "type": "string"
          },
          "project_name": {
            "type": "string"
          },
          "billing_address": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "street2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zipcode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "fax": {
                "type": "string"
              },
              "attention": {
                "type": "string"
              }
            }
          },
          "shipping_address": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "street2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zipcode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "fax": {
                "type": "string"
              },
              "attention": {
                "type": "string"
              }
            }
          },
          "country": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "updated_time": {
            "type": "string"
          },
          "transaction_type": {
            "type": "string"
          },
          "total": {
            "type": "integer"
          },
          "balance": {
            "type": "integer"
          },
          "created_time": {
            "type": "string"
          },
          "last_modified_time": {
            "type": "string"
          },
          "is_emailed": {
            "type": "boolean"
          },
          "is_viewed_in_mail": {
            "type": "boolean"
          },
          "mail_first_viewed_time": {
            "type": "string"
          },
          "mail_last_viewed_time": {
            "type": "string"
          },
          "reminders_sent": {
            "type": "integer"
          },
          "last_reminder_sent_date": {
            "type": "string"
          },
          "payment_expected_date": {
            "type": "string"
          },
          "last_payment_date": {
            "type": "string"
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          },
          "custom_field_hash": {
            "type": "object",
            "properties": {}
          },
          "template_id": {
            "type": "string"
          },
          "documents": {
            "type": "string"
          },
          "salesperson_id": {
            "type": "string"
          },
          "salesperson_name": {
            "type": "string"
          },
          "shipping_charge": {
            "type": "integer"
          },
          "adjustment": {
            "type": "integer"
          },
          "write_off_amount": {
            "type": "integer"
          },
          "exchange_rate": {
            "type": "integer"
          }
        }
      },
      "page_context": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "has_more_page": {
            "type": "boolean"
          },
          "report_name": {
            "type": "string"
          },
          "applied_filter": {
            "type": "string"
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          },
          "sort_column": {
            "type": "string"
          },
          "sort_order": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://accounts.zoho.com/oauth/v2/auth",
            "tokenUrl": "https://accounts.zoho.com/oauth/v2/token",
            "scopes": {
              "ZohoInvoice.invoices.CREATE": "Create invoices",
              "ZohoInvoice.invoices.READ": "Read invoices",
              "ZohoInvoice.invoices.UPDATE": "Update invoices",
              "ZohoInvoice.invoices.DELETE": "Delete invoices"
            }
          }
        },
        "description": "OAuth token should be present for every request Authorization header, after the prefix Zoho-oauthtoken"
      }
    }
  },
  "security": [
    {
      "OAuth2": []
    }
  ]
}